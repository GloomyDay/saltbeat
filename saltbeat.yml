################### Saltbeat Configuration Example #########################

############################# Saltbeat ######################################

saltbeat:
  # Path to salt master event bus
  master_event_pub: /var/run/salt/master/master_event_pub.ipc
  tag_black_list: ["salt/auth", "minion/refresh", "salt/presence/present"]
#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

#================================ Outputs =====================================

# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  # hosts: ["http://my.elasticsearch.host.com:9200"]
  ## TEMPLATE MAY BE BROKEN , tested without template
  # Template name. By default the template name is saltbeat.
  # template.name: "saltbeat"

  # Path to template file
  # template.path: "/etc/saltbeat/saltbeat.template.json"

  # Overwrite existing template
  # template.overwrite: false

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional TLS. By default is off.
  # List of root certificates for HTTPS server verifications
  #tls.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for TLS client authentication
  #tls.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #tls.certificate_key: "/etc/pki/client/cert.key"

#================================ Logging =====================================

# Sets log level. The default log level is error.
# Available log levels are: critical, error, warning, info, debug
#logging.level: debug